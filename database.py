from flask import Flask, jsonify
import psycopg2
import psycopg2.extras

app = Flask(__name__)

# C·∫•u h√¨nh Database
DB_URL = "postgresql://user_player:U7Ic44CSFx6JaLLsal7fGCcsMdA5nixb@dpg-cvjlf13uibrs73ecgneg-a.oregon-postgres.render.com/user_player"

# H√†m k·∫øt n·ªëi database
def get_db_connection():
    try:
        conn = psycopg2.connect(DB_URL)
        return conn
    except Exception as e:
        print(f"üî¥ L·ªói k·∫øt n·ªëi database: {e}")
        return None

# API l·∫•y danh s√°ch t·∫•t c·∫£ t√†i kho·∫£n + tr·∫°ng th√°i
@app.route("/all-users", methods=["GET"])
def all_users():
    conn = get_db_connection()
    if conn is None:
        return jsonify({"error": "Kh√¥ng th·ªÉ k·∫øt n·ªëi database"}), 500

    try:
        with conn.cursor(cursor_factory=psycopg2.extras.DictCursor) as cursor:
            cursor.execute("SELECT username, is_online FROM users")
            users = cursor.fetchall()

        # X·ª≠ l√Ω danh s√°ch ng∆∞·ªùi d√πng
        result = [{"username": user["username"], "status": "üü¢ Online" if user["is_online"] else "üî¥ Offline"} for user in users]

        return jsonify({"all_users": result})
    except Exception as e:
        print(f"üî¥ L·ªói truy v·∫•n database: {e}")
        return jsonify({"error": "L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng"}), 500
    finally:
        conn.close()

# Ch·∫°y Flask Server
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)  # ƒê·∫∑t port theo y√™u c·∫ßu Render

